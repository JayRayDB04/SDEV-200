public class CircleCompare{
    public static void main(String[] args) {

            Circle circle1 = new Circle(5, "red", true);
            Circle circle2 = new Circle(5, "green", false);
            Circle circle3 = new Circle(4, "green", false);

    
            System.out.println("Circle1 radius: " + circle1.getRadius());
            System.out.println("Circle2 radius: " + circle2.getRadius());
            System.out.println("Circle3 radius: " + circle3.getRadius());

            System.out.println("Circle1 is " + (circle1.equals(circle2) ? "" : "not ") +
                "equal to circle2");

            System.out.println("Circle1 is " + (circle1.equals(circle3) ? "" : "not ") +
                "equal to circle3");
    }

    public class Circle extends GeometricObject implements Comparable<Circle> {
	private double radius;

	
	public Circle(double radius, 
		String color, boolean filled) {
		this.radius = radius;
		setColor(color);
		setFilled(filled);
	}
    public Circle() {
        }

    public Circle(double radius) {
        this.radius = radius;
    }

	

	
	public void setRadius(double radius) {
		this.radius = radius;
	}

	@Override 
	public double getArea() {
		return radius * radius * Math.PI;
	}
    public double getRadius() {
            return radius;
        }

	public double getDiameter() {
		return 2 * radius;
	}

	@Override 
	public double getPerimeter() {
		return 2 * radius * Math.PI;
	}

	

	@Override 
	public int compareTo(Circle o) {
		if (this.radius > o.radius)
			return 1;
		else if (this.radius < o.radius)
			return -1;
		else
			return 0;
	}
    @Override 
        public boolean equals(Object o) {
            return this.compareTo((Circle)o) == 0;
        }
	@Override 
	public String toString() {
		return super.toString() + "\nDate created: " +
			"\nRadius: " + radius;
	}
}

public abstract class GeometricObject {
	private String color = "none";
	private boolean filled;

	protected GeometricObject() {
	}

	protected GeometricObject(String color, boolean filled) {
		this.color = color;
		this.filled = filled;
	}

	
	public void setColor(String color) {
		this.color = color;
	}
    public String getColor() {
            return color;
        }

	public boolean isFilled() {
		return filled;
	}

	public void setFilled(boolean filled) {
		this.filled = filled;
	}

	@Override
	public String toString() {
		return "created on " + "\ncolor: " + color +
			" and filled: " + filled;
	}

	public abstract double getArea();
	public abstract double getPerimeter();

}
}
